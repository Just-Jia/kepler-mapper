.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_generated_gallery_plot_horse.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_gallery_plot_horse.py:


3D Horse Data
================


This example generates a Mapper built from a point-cloud sampled from a 3D model of a horse.

`Visualization of the horse data <../../_static/horse.html>`_


.. image:: /generated/gallery/images/sphx_glr_plot_horse_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    KeplerMapper(verbose=2)
    ..Composing projection pipeline of length 1:
            Projections: sum
            Distance matrices: False
            Scalers: MinMaxScaler(copy=True, feature_range=(0, 1))
    ..Projecting on data shaped (8431, 3)

    ..Projecting data using: sum

    ..Scaling with: MinMaxScaler(copy=True, feature_range=(0, 1))

    Mapping on data shaped (8431, 3) using lens shaped (8431, 1)

    Minimal points in hypercube before clustering: 5
    Creating 30 hypercubes.
       > Found 1 clusters in hypercube 0.
       > Found 2 clusters in hypercube 1.
       > Found 3 clusters in hypercube 2.
       > Found 3 clusters in hypercube 3.
       > Found 3 clusters in hypercube 4.
       > Found 3 clusters in hypercube 5.
       > Found 3 clusters in hypercube 6.
       > Found 1 clusters in hypercube 7.
       > Found 2 clusters in hypercube 8.
       > Found 2 clusters in hypercube 9.
       > Found 2 clusters in hypercube 10.
       > Found 3 clusters in hypercube 11.
       > Found 2 clusters in hypercube 12.
       > Found 2 clusters in hypercube 13.
       > Found 1 clusters in hypercube 14.
       > Found 1 clusters in hypercube 15.
       > Found 1 clusters in hypercube 16.
       > Found 1 clusters in hypercube 17.
       > Found 1 clusters in hypercube 18.
       > Found 1 clusters in hypercube 19.
       > Found 1 clusters in hypercube 20.
       > Found 1 clusters in hypercube 21.
       > Found 1 clusters in hypercube 22.
       > Found 1 clusters in hypercube 23.
       > Found 1 clusters in hypercube 24.
       > Found 1 clusters in hypercube 25.
       > Found 1 clusters in hypercube 26.
       > Found 1 clusters in hypercube 27.
       > Found 1 clusters in hypercube 28.
       > Found 1 clusters in hypercube 29.

    Created 48 edges and 48 nodes in 0:00:00.107431.
    Wrote visualization to: output/horse.html




|


.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    import sklearn

    import kmapper as km

    data = np.genfromtxt('data/horse-reference.csv', delimiter=',')

    mapper = km.KeplerMapper(verbose=2)


    lens = mapper.fit_transform(data)


    graph = mapper.map(lens,
                       data,
                       clusterer=sklearn.cluster.DBSCAN(eps=0.1, min_samples=5),
                       cover=km.Cover(30, 0.2))

    mapper.visualize(graph,
                     path_html="output/horse.html",
                     custom_tooltips=np.arange(len(lens)))


    km.drawing.draw_matplotlib(graph)
    plt.show()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.479 seconds)


.. _sphx_glr_download_generated_gallery_plot_horse.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_horse.py <plot_horse.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_horse.ipynb <plot_horse.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
